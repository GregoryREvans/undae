import pathlib

import abjad
import baca
import evans

import undae

maker = evans.SegmentMaker(
    instruments=undae.instruments,
    names=[
        '"Violin I"',
        '"Violin II"',
        '"Viola"',
        '"Violoncello"',
    ],
    abbreviations=[
        '"vn. I"',
        '"vn. II"',
        '"va."',
        '"vc."',
    ],
    name_staves=True,
    fermata_measures=undae.fermata_measures_03,
    commands=[
        evans.MusicCommand(
            [("violin 1 voice", (0, 9))],
            evans.talea(
                [1],
                16,
                extra_counts=[0, 1, 0, 0, 2],
                rewrite=-1,
                preprocessor=evans.make_preprocessor(quarters=True),
            ),
            evans.loop([2, 10, 18, 26, 26, 18, 10, 2], [1, 3, -2, 1, 2, 1, -3, 4]),
            evans.slur([4]),
            evans.NoteheadHandler(
                ["harmonic"],
                head_boolean_vector=[
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                ],
            ),
            lambda _: baca.hairpin(_, "p < f"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("violin 1 voice", [9])],
            evans.talea([1], 16, extra_counts=[8], treat_tuplets=False),
            evans.loop([0, 1, 2, 3], [1, 2, -1, 3, -1]),
            abjad.LilyPondLiteral(r"\harmonicsOn", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\harmonicsOff", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([4]),
            evans.text_span(
                [r"\diamond-notehead-markup", r"\default-notehead-markup"],
                "=>",
                [4],
                padding=2,
                id=1,
            ),
            evans.text_span([r"norm.", r"scr."], "=>", padding=4, id=2),
            evans.text_span([r"clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [4]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("violin 1 voice", [10])],
            evans.make_tied_notes(rewrite=-1),
            evans.PitchHandler([["bf'", "f''"]]),
            lambda _: baca.hairpin(_, "ff >o niente"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("violin 1 voice", (11, 15))],
            evans.talea(
                [1],
                16,
                extra_counts=[0, 2, 0, 0, 2, 1, 0, 3],
                preprocessor=evans.make_preprocessor(quarters=True),
                rewrite=-1,
            ),
            evans.loop([0, 1, 2, 3], [1, 2, -1, 3, -1]),
            abjad.LilyPondLiteral(r"\half-harmonic", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\revert-noteheads", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([4]),
            evans.text_span(
                [r"\half-diamond-notehead-markup", r"\default-notehead-markup"],
                "=>",
                [4],
                padding=3.25,
                id=1,
            ),
            evans.text_span([r"norm.", r"scr."], "=>", padding=5.25, id=2),
            evans.text_span([r"1/2 clt."], "=|", padding=7.25, id=3),
            evans.hairpin("p < f >", [7]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("violin 2 voice", (0, 9))],
            evans.talea(
                [1],
                16,
                extra_counts=[2, 2, 0, 0, 0, 1],
                rewrite=-1,
                preprocessor=evans.make_preprocessor(quarters=True),
            ),
            evans.loop(
                [
                    3,
                    12,
                    21,
                    30,
                    30,
                    21,
                    12,
                    3,
                    3,
                    12,
                    21,
                    30,
                    30,
                    21,
                    12,
                    3,
                    32,
                    23,
                    14,
                    5,
                    5,
                    14,
                    23,
                    32,
                ],
                [2, 1, -2],
            ),
            evans.slur([4]),
            evans.NoteheadHandler(
                ["harmonic"],
                head_boolean_vector=[
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1,
                    1,
                ],
            ),
            lambda _: baca.hairpin(_, "p < f"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("violin 2 voice", [9])],
            evans.talea([1], 16, extra_counts=[8], treat_tuplets=False),
            evans.loop([0, 1, 2, 3, 4], [1, 2, -1, 3, -1]),
            abjad.LilyPondLiteral(r"\half-harmonic", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\revert-noteheads", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([5], direction=abjad.UP),
            evans.text_span(
                [r"\half-diamond-notehead-markup", r"\default-notehead-markup"],
                "=>",
                [5],
                padding=2,
                id=1,
            ),
            evans.text_span([r"norm.", r"\markup { 1/2 scr. }"], "=>", padding=4, id=2),
            evans.text_span([r"clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [4]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("violin 2 voice", [10])],
            evans.make_tied_notes(rewrite=-1),
            evans.PitchHandler([["ef''", "d'''"]]),
            lambda _: baca.hairpin(_, "ff >o niente"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("violin 2 voice", (11, 15))],
            evans.talea(
                [1],
                16,
                extra_counts=[0, 2, 0, 0, 2, 1, 0, 3],
                preprocessor=evans.make_preprocessor(
                    quarters=True, fuse_counts=[1, 2, 1]
                ),
                rewrite=-1,
            ),
            evans.loop([1, 2, 3], [-1, 2, -2, 3, -1]),
            abjad.LilyPondLiteral(r"\harmonicsOn", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\harmonicsOff", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([3]),
            evans.text_span(
                [r"\diamond-notehead-markup", r"\default-notehead-markup"],
                "=>",
                [3],
                padding=2,
                id=1,
            ),
            evans.text_span([r"norm.", r"\markup scr."], "=>", padding=4, id=2),
            evans.text_span([r"1/2 clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [6]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("viola voice", (0, 9))],
            evans.talea(
                [4, 1, 1, 1, 3, 7],
                8,
                extra_counts=[0, 0, 1, 0, 0, 1, 2],
                rewrite=-1,
                preprocessor=evans.make_preprocessor(quarters=True),
            ),
            evans.GraceHandler(
                boolean_vector=[0, 1, 1, 1, 0, 0],
                gesture_lengths=[1],
                remove_skips=True,
            ),
            evans.loop([7, 1, 2, 0, 1, 2, 3, 12, 9], [-3]),
            evans.NoteheadHandler(
                ["harmonic"],
                head_boolean_vector=[1, 0, 1, 0, 1, 0, 1, 1, 1],
            ),
            evans.ArticulationHandler(
                [">"], articulation_boolean_vector=[1, 0, 0, 0, 0, 0, 0, 1, 1]
            ),
            evans.Callable(
                undae.add_fancy_glisses(
                    [0, 4, 5, 6, 10, 11, 12, 16, 17, 18, 22, 23, 24]
                ),
                lambda _: abjad.select.logical_ties(_),
            ),
            lambda _: baca.hairpin(_, "p < f"),
            abjad.Clef("alto"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("viola voice", [9])],
            evans.talea([1], 16, extra_counts=[8], treat_tuplets=False),
            evans.loop([-6, -7, -8, -9, -10, -11], [2, -1, -1, 3, -2, 1]),
            abjad.LilyPondLiteral(r"\harmonicsOn", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\harmonicsOff", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([6], direction=abjad.UP),
            evans.text_span(
                [r"\default-notehead-markup", r"\diamond-notehead-markup"],
                "=>",
                [6],
                padding=2,
                id=1,
            ),
            evans.text_span([r"norm.", r"\markup scr."], "=>", padding=4, id=2),
            evans.text_span([r"clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [4]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("viola voice", [10, 11])],
            evans.make_tied_notes(rewrite=-1),
            evans.PitchHandler([["e", "b"]]),
            lambda _: baca.hairpin(_, "ff >o niente"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("viola voice", (12, 15))],
            evans.talea(
                [1],
                16,
                extra_counts=[0, 2, 0, 0, 2, 1, 0, 3],
                preprocessor=evans.make_preprocessor(quarters=True),
                rewrite=-1,
            ),
            evans.loop([-6, -7, -8, -9, -10, -11], [2, -1, -1, 3, -2, 1]),
            abjad.LilyPondLiteral(r"\half-harmonic", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\revert-noteheads", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([6]),
            evans.text_span(
                [r"\default-notehead-markup", r"\half-diamond-notehead-markup"],
                "=>",
                [12],
                padding=2,
                id=1,
            ),
            evans.text_span([r"P", r"T"], "=>", [6], padding=4, id=2),
            evans.text_span([r"1/2 clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [5]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("cello voice", (0, 9))],
            evans.make_tied_notes(rewrite=-1),
            evans.PitchHandler([["c,", "b,"]]),
            lambda _: baca.hairpin(_, "sfp < f"),
            abjad.Clef("bass"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("cello voice", [9])],
            evans.talea([1], 16, extra_counts=[8], treat_tuplets=False),
            evans.loop([-7, -8, -9, -10, -11], [1, -3, -1, 3, -2, 1]),
            abjad.LilyPondLiteral(r"\harmonicsOn", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\harmonicsOff", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([5]),
            evans.text_span(
                [r"\half-diamond-notehead-markup", r"\diamond-notehead-markup"],
                "=>",
                [5],
                padding=2,
                id=1,
            ),
            evans.text_span([r"T", r"P"], "=>", padding=4, id=2),
            evans.text_span([r"clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [4]),
            # undae.D_color,
        ),
        evans.MusicCommand(
            [("cello voice", [10, 11, 12, 13])],
            evans.make_tied_notes(rewrite=-1),
            evans.PitchHandler([["a", "g'"]]),
            lambda _: baca.hairpin(_, "ff >o niente"),
            # undae.B_color,
        ),
        evans.MusicCommand(
            [("cello voice", [14])],
            evans.talea(
                [1],
                16,
                extra_counts=[0, 2, 0, 0, 2, 1, 0, 3],
                preprocessor=evans.make_preprocessor(
                    quarters=True, fuse_counts=[1, 2, 1]
                ),
                rewrite=-1,
            ),
            evans.loop([-7, -8, -9, -10, -11], [1, -3, -1, 3, -2, 1]),
            abjad.LilyPondLiteral(r"\half-harmonic", site="before"),
            evans.Attachment(
                abjad.LilyPondLiteral(r"\revert-noteheads", site="after"),
                selector=lambda _: abjad.select.leaf(_, -1),
            ),
            evans.slur([5]),
            evans.text_span(
                [r"\diamond-notehead-markup", r"\half-diamond-notehead-markup"],
                "=>",
                [10],
                padding=2,
                id=1,
            ),
            evans.text_span([r"T", r"P"], "=>", [5], padding=4, id=2),
            evans.text_span([r"1/2 clt."], "=|", padding=6, id=3),
            evans.hairpin("p < f >", [4]),
            # undae.D_color,
        ),
        evans.call(
            "score",
            evans.SegmentMaker.beam_score_without_splitting,
            lambda _: abjad.select.components(_, abjad.Score),
        ),
        evans.attach(
            "Global Context",
            undae.start_repeat,
            lambda _: abjad.select.leaf(_, 7),
        ),
        evans.attach(
            "Global Context",
            undae.stop_repeat,
            lambda _: abjad.select.leaf(_, 11),
        ),
        evans.attach(
            "Global Context",
            undae.met_93,
            lambda _: abjad.select.leaf(_, 0),
        ),
        evans.attach(
            "Global Context",
            undae.mark_93,
            lambda _: abjad.select.leaf(_, 0),
        ),
    ],
    score_template=undae.score,
    transpose_from_sounding_pitch=True,
    time_signatures=undae.signatures_03,
    clef_handlers=None,
    tuplet_bracket_noteheads=False,
    add_final_grand_pause=False,
    score_includes=[
        f"{pathlib.Path(abjad.__file__).parent.parent}/docs/source/_stylesheets/abjad.ily",
        f"{pathlib.Path(__file__).parent}/../../build/segment_stylesheet.ily",
    ],
    segment_name="03",
    current_directory=pathlib.Path(__file__).resolve().parent,
    cutaway=False,
    beam_pattern="meter",
    beam_rests=True,
    barline="||",
    rehearsal_mark="",
    fermata="scripts.ufermata",
    with_layout=True,
    extra_rewrite=False,  # should default to false but defaults to true
    mm_rests=False,
    print_clock_time=True,
)

maker.build_segment()
